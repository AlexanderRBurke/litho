"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9293],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>c,MDXProvider:()=>d,mdx:()=>f,useMDXComponents:()=>p,withMDXComponents:()=>s});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),s=function(e){return function(t){var n=p(t.components);return a.createElement(e,r({},t,{components:n}))}},p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,c=m(e,["components","mdxType","originalType","parentName"]),s=p(n),d=o,h=s["".concat(i,".").concat(d)]||s[d]||u[d]||r;return n?a.createElement(h,l(l({ref:t},c),{},{components:n})):a.createElement(h,l({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=h;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},13919:(e,t,n)=>{function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function o(e){return void 0!==e&&!a(e)}n.d(t,{b:()=>a,Z:()=>o})},44996:(e,t,n)=>{n.r(t),n.d(t,{useBaseUrlUtils:()=>r,default:()=>i});var a=n(52263),o=n(13919);function r(){var e=(0,a.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,a){var r=void 0===a?{}:a,i=r.forcePrependBaseUrl,l=void 0!==i&&i,m=r.absolute,c=void 0!==m&&m;if(!n)return n;if(n.startsWith("#"))return n;if((0,o.b)(n))return n;if(l)return t+n;var s=n.startsWith(t)?n:t+n.replace(/^\//,"");return c?e+s:s}(r,n,e,t)}}}function i(e,t){return void 0===t&&(t={}),(0,r().withBaseUrl)(e,t)}},58215:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294);const o=function(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},55064:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(67294),o=n(79443);const r=function(){var e=(0,a.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var i=n(86010);const l="tabItem_1uMI",m="tabItemActive_2DSg";var c=37,s=39;const p=function(e){var t=e.lazy,n=e.block,o=e.defaultValue,p=e.values,d=e.groupId,u=e.className,h=r(),f=h.tabGroupChoices,x=h.setTabGroupChoices,v=(0,a.useState)(o),y=v[0],g=v[1],b=a.Children.toArray(e.children),w=[];if(null!=d){var C=f[d];null!=C&&C!==y&&p.some((function(e){return e.value===C}))&&g(C)}var N=function(e){var t=e.currentTarget,n=w.indexOf(t),a=p[n].value;g(a),null!=d&&(x(d,a),setTimeout((function(){var e,n,a,o,r,i,l,c;(e=t.getBoundingClientRect(),n=e.top,a=e.left,o=e.bottom,r=e.right,i=window,l=i.innerHeight,c=i.innerWidth,n>=0&&r<=c&&o<=l&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(m),setTimeout((function(){return t.classList.remove(m)}),2e3))}),150))},k=function(e){var t,n;switch(e.keyCode){case s:var a=w.indexOf(e.target)+1;n=w[a]||w[0];break;case c:var o=w.indexOf(e.target)-1;n=w[o]||w[w.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.default)("tabs",{"tabs--block":n},u)},p.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,className:(0,i.default)("tabs__item",l,{"tabs__item--active":y===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:k,onFocus:N,onClick:N},n)}))),t?(0,a.cloneElement)(b.filter((function(e){return e.props.value===y}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},b.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==y})}))))}},79443:(e,t,n)=>{n.d(t,{Z:()=>a});const a=(0,n(67294).createContext)(void 0)},68426:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>c,contentTitle:()=>s,metadata:()=>p,toc:()=>d,default:()=>h});var a=n(87462),o=n(63366),r=(n(67294),n(3905)),i=n(55064),l=n(58215),m=n(44996),c={id:"layout-specs",title:"Layout Specs"},s=void 0,p={unversionedId:"mainconcepts/uicomposition/layout-specs",id:"mainconcepts/uicomposition/layout-specs",isDocsHomePage:!1,title:"Layout Specs",description:"This page was moved from the old website without any change and might be updated",source:"@site/../docs/mainconcepts/uicomposition/layout-specs.mdx",sourceDirName:"mainconcepts/uicomposition",slug:"/mainconcepts/uicomposition/layout-specs",permalink:"/docs/mainconcepts/uicomposition/layout-specs",editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/mainconcepts/uicomposition/layout-specs.mdx",version:"current",frontMatter:{id:"layout-specs",title:"Layout Specs"},sidebar:"mainSidebar",previous:{title:"Building Lists",permalink:"/docs/tutorial/building-lists"},next:{title:"Mount Specs",permalink:"/docs/mainconcepts/uicomposition/mount-specs"}},d=[],u={toc:d};function h(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,r.mdx)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,r.mdx)("h5",{parentName:"div"},(0,r.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Content will be updated")),(0,r.mdx)("div",{parentName:"div",className:"admonition-content"},(0,r.mdx)("p",{parentName:"div"},"This page was moved from the old website without any change and might be updated"))),(0,r.mdx)(i.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,r.mdx)(l.Z,{value:"java",mdxType:"TabItem"},(0,r.mdx)("p",null,"A ",(0,r.mdx)("em",{parentName:"p"},"layout spec")," is the logical equivalent of a composite view on Android. It simply groups existing components together in an immutable layout tree."),(0,r.mdx)("p",null,"Implementing a layout spec is very simple: you only need to write one method annotated with ",(0,r.mdx)("inlineCode",{parentName:"p"},"@OnCreateLayout")," which returns an immutable tree of ",(0,r.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/Component.html"},"Component")," objects."),(0,r.mdx)("p",null,"Let's start with a simple example:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"@LayoutSpec\npublic class MyComponentSpec {\n\n  @OnCreateLayout\n  static Component onCreateLayout(\n      ComponentContext c,\n      @Prop int color,\n      @Prop String title) {\n      return Row.create(c)\n          .alignItems(CENTER)\n          .child(\n              SolidColor.create(c)\n                  .colorRes(color)\n                  .widthDip(40)\n                  .heightDip(40))\n          .child(\n              Text.create(c)\n                  .text(title)\n                  .textSizeRes(R.dimen.my_text_size)\n                  .flexGrow(1f))\n          .build();\n  }\n}\n")),(0,r.mdx)("p",null,"As you can see, layout spec classes use the ",(0,r.mdx)("inlineCode",{parentName:"p"},"@LayoutSpec")," annotation."),(0,r.mdx)("p",null,"The method annotated with ",(0,r.mdx)("inlineCode",{parentName:"p"},"@OnCreateLayout")," must have ",(0,r.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/ComponentContext.html"},"ComponentContext")," as its first argument followed by a list of arguments annotated with ",(0,r.mdx)("inlineCode",{parentName:"p"},"@Prop"),". The annotation processor will validate this and other invariants in the API at build time."),(0,r.mdx)("p",null,"In the example above, the layout tree has a root ",(0,r.mdx)("em",{parentName:"p"},"Container")," with two children stacked horizontally (",(0,r.mdx)("inlineCode",{parentName:"p"},"Row.create"),") and vertically centered (",(0,r.mdx)("inlineCode",{parentName:"p"},"Align.CENTER"),")."),(0,r.mdx)("p",null,"The first child is a ",(0,r.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/widget/SolidColor.html"},"SolidColor")," component that takes a ",(0,r.mdx)("inlineCode",{parentName:"p"},"colorRes")," prop and has a 40dp width and height."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"SolidColor.create(c)\n    .colorRes(color)\n    .width(40)\n    .height(40)\n")),(0,r.mdx)("p",null,"The second child is a ",(0,r.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/widget/Text.html"},"Text")," component that takes a prop named ",(0,r.mdx)("inlineCode",{parentName:"p"},"text")," and fills the remaining horizontal space available in ",(0,r.mdx)("inlineCode",{parentName:"p"},"MyComponent")," by using ",(0,r.mdx)("inlineCode",{parentName:"p"},"grow(1f)")," (equivalent to Android's ",(0,r.mdx)("inlineCode",{parentName:"p"},"layoutWeight")," from ",(0,r.mdx)("inlineCode",{parentName:"p"},"LinearLayout"),"). The text size is defined in ",(0,r.mdx)("inlineCode",{parentName:"p"},"my_text_size")," dimension resource."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"Text.create(c)\n    .text(title)\n    .textSizeRes(R.dimen.my_text_size)\n    .grow(1f)\n")),(0,r.mdx)("img",{src:(0,m.default)("/images/flow-chart-v0.23.1-layout-spec.svg"),alt:"Layout Spec lifecycle flowchart",className:"white-background"}),(0,r.mdx)("p",null,"You can check the full ",(0,r.mdx)("a",{parentName:"p",href:"https://yogalayout.com/docs/"},"Yoga")," documentation to see all the layout features that the framework exposes.")),(0,r.mdx)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,r.mdx)("p",null,"A ",(0,r.mdx)("em",{parentName:"p"},"layout spec")," is the logical equivalent of a composite view on Android. It simply groups existing components together in an immutable layout tree."),(0,r.mdx)("p",null,"Implementing a layout spec is very simple: you only need to write one method annotated with ",(0,r.mdx)("inlineCode",{parentName:"p"},"@OnCreateLayout")," which returns an immutable tree of ",(0,r.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/Component.html"},"Component")," objects."),(0,r.mdx)("p",null,"Let's start with a simple example:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},"@LayoutSpec\nobject MyComponentSpec {\n\n  @OnCreateLayout\n  fun onCreateLayout(\n      c: ComponentContext,\n      @Prop image: String,\n      @Prop(optional = true) imageAspectRatio: Float): Component =\n      Row.create(c)\n          .alignItems(CENTER)\n          .child(\n              SolidColor.create(c)\n                  .colorRes(color)\n                  .widthDip(40)\n                  .heightDip(40))\n          .child(\n              Text.create(c)\n                  .text(title)\n                  .textSizeRes(R.dimen.my_text_size)\n                  .flexGrow(1f))\n          .build()\n}\n")),(0,r.mdx)("p",null,"As you can see, layout spec classes use the ",(0,r.mdx)("inlineCode",{parentName:"p"},"@LayoutSpec")," annotation."),(0,r.mdx)("p",null,"The method annotated with ",(0,r.mdx)("inlineCode",{parentName:"p"},"@OnCreateLayout")," must have ",(0,r.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/ComponentContext.html"},"ComponentContext")," as its first argument followed by a list of arguments annotated with ",(0,r.mdx)("inlineCode",{parentName:"p"},"@Prop"),". The annotation processor will validate this and other invariants in the API at build time."),(0,r.mdx)("p",null,"In the example above, the layout tree has a root ",(0,r.mdx)("em",{parentName:"p"},"Container")," with two children stacked horizontally (",(0,r.mdx)("inlineCode",{parentName:"p"},"Row.create"),") and vertically centered (",(0,r.mdx)("inlineCode",{parentName:"p"},"Align.CENTER"),")."),(0,r.mdx)("p",null,"The first child is a ",(0,r.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/widget/SolidColor.html"},"SolidColor")," component that takes a ",(0,r.mdx)("inlineCode",{parentName:"p"},"colorRes")," prop and has a 40dp width and height."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},"SolidColor.create(c)\n    .colorRes(color)\n    .width(40)\n    .height(40)\n")),(0,r.mdx)("p",null,"The second child is a ",(0,r.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/widget/Text.html"},"Text")," component that takes a prop named ",(0,r.mdx)("inlineCode",{parentName:"p"},"text")," and fills the remaining horizontal space available in ",(0,r.mdx)("inlineCode",{parentName:"p"},"MyComponent")," by using ",(0,r.mdx)("inlineCode",{parentName:"p"},"grow(1f)")," (equivalent to Android's ",(0,r.mdx)("inlineCode",{parentName:"p"},"layoutWeight")," from ",(0,r.mdx)("inlineCode",{parentName:"p"},"LinearLayout"),"). The text size is defined in ",(0,r.mdx)("inlineCode",{parentName:"p"},"my_text_size")," dimension resource."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},"Text.create(c)\n    .text(title)\n    .textSizeRes(R.dimen.my_text_size)\n    .grow(1f)\n")),(0,r.mdx)("img",{src:(0,m.default)("/images/flow-chart-v0.23.1-layout-spec.svg"),alt:"Layout Spec lifecycle flowchart",className:"white-background"}),(0,r.mdx)("p",null,"You can check the full ",(0,r.mdx)("a",{parentName:"p",href:"https://yogalayout.com/docs/"},"Yoga")," documentation to see all the layout features that the framework exposes."))))}h.isMDXComponent=!0},86010:(e,t,n)=>{function a(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}function o(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(o&&(o+=" "),o+=t);return o}n.r(t),n.d(t,{default:()=>o})}}]);