"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8181],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>c,MDXProvider:()=>u,mdx:()=>h,useMDXComponents:()=>m,withMDXComponents:()=>s});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},a.apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){return function(t){var n=m(t.components);return o.createElement(e,a({},t,{components:n}))}},m=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=m(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),s=m(n),u=r,g=s["".concat(i,".").concat(u)]||s[u]||p[u]||a;return n?o.createElement(g,l(l({ref:t},c),{},{components:n})):o.createElement(g,l({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=g;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},19590:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>l,contentTitle:()=>d,metadata:()=>c,toc:()=>s,default:()=>u});var o=n(87462),r=n(63366),a=(n(67294),n(3905)),i=["components"],l={id:"annotation-processor-debugging",title:"Annotation Processor Debugging"},d=void 0,c={unversionedId:"annotation-processor-debugging",id:"annotation-processor-debugging",isDocsHomePage:!1,title:"Annotation Processor Debugging",description:"1. Run compiler in debug mode",source:"@site/../docs/annotation-processor-debugging.md",sourceDirName:".",slug:"/annotation-processor-debugging",permalink:"/docs/annotation-processor-debugging",editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/annotation-processor-debugging.md",tags:[],version:"current",frontMatter:{id:"annotation-processor-debugging",title:"Annotation Processor Debugging"},sidebar:"mainSidebar",previous:{title:"Incremental Mount",permalink:"/docs/deep-dive/incremental-mount"}},s=[{value:"1. Run compiler in debug mode",id:"1-run-compiler-in-debug-mode",children:[{value:"With Gradle:",id:"with-gradle",children:[],level:3},{value:"With Buck:",id:"with-buck",children:[],level:3}],level:2},{value:"2. Set breakpoints in IDE",id:"2-set-breakpoints-in-ide",children:[],level:2},{value:"3. Attach debugger to build process",id:"3-attach-debugger-to-build-process",children:[{value:"Attach to Process:",id:"attach-to-process",children:[],level:3},{value:"Create a new Debug Configuration:",id:"create-a-new-debug-configuration",children:[],level:3}],level:2}],m={toc:s};function u(e){var t=e.components,l=(0,r.Z)(e,i);return(0,a.mdx)("wrapper",(0,o.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h2",{id:"1-run-compiler-in-debug-mode"},"1. Run compiler in debug mode"),(0,a.mdx)("h3",{id:"with-gradle"},"With Gradle:"),(0,a.mdx)("p",null,"Debugging the annotation processor stage is a bit tricky as you are essentially debugging the Java Compiler (",(0,a.mdx)("inlineCode",{parentName:"p"},"javac"),").\nGradle, however, allows you to attach a debugger during the compilation stage by setting the property ",(0,a.mdx)("inlineCode",{parentName:"p"},"org.gradle.debug")," to true.\nTo start Gradle with that flag, figure out a target that invokes the annotation processor and start it like this (example for ",(0,a.mdx)("inlineCode",{parentName:"p"},"litho-widget")," module):"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"./gradlew --no-daemon -Dorg.gradle.debug=true :litho-widget:compileDebugJavaWithJavac\n")),(0,a.mdx)("p",null,'This will pause the execution during the "Starting Daemon" phase until you connect your debugger.'),(0,a.mdx)("h3",{id:"with-buck"},"With Buck:"),(0,a.mdx)("p",null,"Buck doesn't have built-in support for suspending the compiler, but you can still attach a debugger by directly\ninstrumenting the JVM to open a debugging port."),(0,a.mdx)("p",null,"For example, to trigger annotation processor from our Sample App:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-bash"},"BUCK_DEBUG_MODE=1 NO_BUCKD=1 buck build //fbandroid/libraries/components/sample/src/main/java/com/facebook/samples/litho:litho\n")),(0,a.mdx)("h2",{id:"2-set-breakpoints-in-ide"},"2. Set breakpoints in IDE"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"If you are not sure where to put breakpoints, these classes might be a good start:",(0,a.mdx)("ul",{parentName:"li"},(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("a",{parentName:"li",href:"https://github.com/facebook/litho/blob/master/litho-processor/src/main/java/com/facebook/litho/specmodels/generator/BuilderGenerator.java"},"BuilderGenerator")," - Class that generates the builder for a Component"),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("a",{parentName:"li",href:"https://github.com/facebook/litho/blob/master/litho-processor/src/main/java/com/facebook/litho/specmodels/generator/ComponentBodyGenerator.java"},"ComponentBodyGenerator")," - Class that generates the implementation of a Component")))),(0,a.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,a.mdx)("h5",{parentName:"div"},(0,a.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,a.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.mdx)("div",{parentName:"div",className:"admonition-content"},(0,a.mdx)("p",{parentName:"div"},"Breakpoints won't get hit if there are no code changes as Buck will use cached built output. Please either call ",(0,a.mdx)("inlineCode",{parentName:"p"},"buck clean")," or make some changes in code"))),(0,a.mdx)("h2",{id:"3-attach-debugger-to-build-process"},"3. Attach debugger to build process"),(0,a.mdx)("p",null,"There are 2 options here: using ",(0,a.mdx)("strong",{parentName:"p"},"Attach to process...")," menu option or using ",(0,a.mdx)("strong",{parentName:"p"},"pre-configured Run Configuration")),(0,a.mdx)("h3",{id:"attach-to-process"},"Attach to Process:"),(0,a.mdx)("ol",null,(0,a.mdx)("li",{parentName:"ol"},"Run -> Attach To Process"),(0,a.mdx)("li",{parentName:"ol"},"Make sure to not pick ",(0,a.mdx)("strong",{parentName:"li"},'"Attach Debugger to Android Process"'),"!"),(0,a.mdx)("li",{parentName:"ol"},"Wait for Android Studio to find the waiting Buck or Gradle process on a respective port (the same one used in previous steps)"),(0,a.mdx)("li",{parentName:"ol"},"Select that option from the choices")),(0,a.mdx)("p",null,(0,a.mdx)("img",{alt:"Attach to Process",src:n(44324).Z})),(0,a.mdx)("h3",{id:"create-a-new-debug-configuration"},"Create a new Debug Configuration:"),(0,a.mdx)("ol",null,(0,a.mdx)("li",{parentName:"ol"},"Run -> Edit Configurations -> Add -> Remote"),(0,a.mdx)("li",{parentName:"ol"},"Give it a name, ie: Debug Gradle/Buck"),(0,a.mdx)("li",{parentName:"ol"},"Debugger mode: Attach to remote JVM"),(0,a.mdx)("li",{parentName:"ol"},"Host: localhost"),(0,a.mdx)("li",{parentName:"ol"},"Port: 5005 (use the port number printed when running Gradle\\Buck in debug mode in the previous step. By default: 5005 is for Gradle and 8888 for Buck)"),(0,a.mdx)("li",{parentName:"ol"},"Click OK to create it")),(0,a.mdx)("p",null,(0,a.mdx)("img",{alt:"IntelliJ Remote Target",src:n(41401).Z})),(0,a.mdx)("ol",{start:7},(0,a.mdx)("li",{parentName:"ol"},"Select the new configuration from the Configuration dropdown"),(0,a.mdx)("li",{parentName:"ol"},"Click Debug Button")))}u.isMDXComponent=!0},44324:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/debugging-attach-to-process-4c778276a37a6263744c8cad9a9bfc7e.png"},41401:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/remote-debugger-9bc343815065516db40f1bb9268abf8b.png"}}]);