"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6692],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>d,MDXProvider:()=>p,mdx:()=>g,useMDXComponents:()=>c,withMDXComponents:()=>l});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o.apply(this,arguments)}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=r.createContext({}),l=function(e){return function(t){var n=c(t.components);return r.createElement(e,o({},t,{components:n}))}},c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),l=c(n),p=i,m=l["".concat(s,".").concat(p)]||l[p]||f[p]||o;return n?r.createElement(m,a(a({ref:t},d),{},{components:n})):r.createElement(m,a({ref:t},d))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=m;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var d=2;d<o;d++)s[d]=n[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},13919:(e,t,n)=>{function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function i(e){return void 0!==e&&!r(e)}n.d(t,{b:()=>r,Z:()=>i})},44996:(e,t,n)=>{n.r(t),n.d(t,{useBaseUrlUtils:()=>o,default:()=>s});var r=n(52263),i=n(13919);function o(){var e=(0,r.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,o=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var o=void 0===r?{}:r,s=o.forcePrependBaseUrl,a=void 0!==s&&s,u=o.absolute,d=void 0!==u&&u;if(!n)return n;if(n.startsWith("#"))return n;if((0,i.b)(n))return n;if(a)return t+n;var l=n.startsWith(t)?n:t+n.replace(/^\//,"");return d?e+l:l}(o,n,e,t)}}}function s(e,t){return void 0===t&&(t={}),(0,o().withBaseUrl)(e,t)}},79523:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>u,contentTitle:()=>d,metadata:()=>l,toc:()=>c,default:()=>f});var r=n(87462),i=n(63366),o=(n(67294),n(3905)),s=n(44996),a=["components"],u={id:"tests-in-android-studio",title:"Testing in Android Studio"},d=void 0,l={unversionedId:"testing/tests-in-android-studio",id:"testing/tests-in-android-studio",isDocsHomePage:!1,title:"Testing in Android Studio",description:"The Litho repository can be used with both Buck and Gradle. The Buck plugin for",source:"@site/../docs/testing/tests-in-android-studio.mdx",sourceDirName:"testing",slug:"/testing/tests-in-android-studio",permalink:"/docs/testing/tests-in-android-studio",editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/testing/tests-in-android-studio.mdx",tags:[],version:"current",frontMatter:{id:"tests-in-android-studio",title:"Testing in Android Studio"}},c=[],p={toc:c};function f(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.mdx)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,"The Litho repository can be used with both Buck and Gradle. The Buck plugin for\nAndroid Studio has support for running tests by simply clicking next to a tests\nmethod and requires no further configuration."),(0,o.mdx)("p",null,"Gradle, however, can be a bit tricky to convince to run our tests due to\nour use of native libraries. When running a test, you may see an error\nmessage complaining about ",(0,o.mdx)("inlineCode",{parentName:"p"},"libyoga")," like this:"),(0,o.mdx)("img",{src:(0,s.default)("/images/android-studio-tests-0.png"),width:"800px"}),(0,o.mdx)("p",null,"However, you can easily fix those loading issues by modifying the test settings.\nFirst, add ",(0,o.mdx)("inlineCode",{parentName:"p"},"-Djava.library.path=build/jniLibs"),' to the "VM Options" of your run\nconfiguration. Then, add the environment variables corresponding to your\nplatform:'),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"DYLD_LIBRARY_PATH=build/jniLibs")," for MacOS, or"),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"LD_LIBRARY_PATH=build/jniLibs")," for Linux.")),(0,o.mdx)("p",null,"The end result should look like this:"),(0,o.mdx)("img",{src:(0,s.default)("/images/android-studio-tests-1.png"),width:"800px"}),(0,o.mdx)("p",null,"Afterwards, you should be able to run your tests and see the results directly in\nAndroid Studio. Added benefit: You can continuously run tests in the background\non every change or manually rerun them by pressing ",(0,o.mdx)("inlineCode",{parentName:"p"},"Ctrl+Shift+F10")," by default."),(0,o.mdx)("img",{src:(0,s.default)("/images/android-studio-tests-2.png"),width:"800px"}),(0,o.mdx)("p",null,"When this works for you, make sure to update the default settings as well so you\ndon't need to enter those settings again for every new test you run:"),(0,o.mdx)("img",{src:(0,s.default)("/images/android-studio-tests-3.png"),width:"800px"}))}f.isMDXComponent=!0}}]);